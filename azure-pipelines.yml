# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr: none

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  RESOURCE_GROUP: test-1
  WEBAPP_NAME: testp
  APP_SERVICE_PLAN: ASP-testdockergroup-965b
  COMPOSE_FILE_PATH: 'docker-compose.yml'

stages:
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
          - checkout: self

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Checking if the dags directory exists on the web app..."

                # SSH into the web app to check for the existing dags directory and remove it if found
                az webapp ssh --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --command "
                if [ -d '/home/dags' ]; then
                  echo 'dags directory found. Removing it...'
                  rm -rf /home/dags
                else
                  echo 'dags directory not found. Proceeding...'
                fi"

                echo "Deploying the new dags directory to /home on the web app..."

                # Create a zip file of the contents inside the dags directory
                cd dags
                zip -r ../dags.zip ./*
                cd ..

                # Use Azure CLI to upload the zip file to the web app's /home directory
                az webapp deploy --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --src-path dags.zip --type zip --async

                # SSH into the web app and extract the contents of the dags.zip directly to /home
                az webapp ssh --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --command "
                unzip /home/site/wwwroot/dags.zip -d /home/ &&
                rm -rf /home/site/wwwroot/dags.zip"

                echo "Dags contents successfully transferred to /home."

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying to Azure Web App using Docker Compose..."
                az webapp create --resource-group $(RESOURCE_GROUP) --plan $(APP_SERVICE_PLAN) --name $(WEBAPP_NAME) || true
                # Ensure the web app exists and configure the settings
                az webapp config appsettings set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE=TRUE

                # Configure the web app to use Docker Compose from Docker Hub (public repository)
                az webapp config container set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --multicontainer-config-type compose --multicontainer-config-file $(COMPOSE_FILE_PATH)

                # Restart the web app to apply changes
                az webapp restart --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME)

                echo "Docker Compose deployment completed."
            displayName: 'Deploy Docker Compose to Azure Web App'
