pr: none

trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  RESOURCE_GROUP: testyml_group-9580
  WEBAPP_NAME: testyml
  APP_SERVICE_PLAN: ASP-Manojteamsbot-b4ed
  COMPOSE_FILE_PATH: 'docker-compose.yml'
  DAG_PATH: '/home/dags/' # Default path, will be updated dynamically

stages:
  - stage: Deploy
    jobs:
      - job: Deploy
        steps:
          - checkout: self

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying to Azure Web App using Docker Compose..."

                # Ensure the web app exists
                az webapp create --resource-group $(RESOURCE_GROUP) --plan $(APP_SERVICE_PLAN) --name $(WEBAPP_NAME) || true
                
                # Enable app service storage
                az webapp config appsettings set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE=true
                
                # Configure the web app to use Docker Compose from Docker Hub (public repository)
                az webapp config container set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --multicontainer-config-type compose --multicontainer-config-file $(COMPOSE_FILE_PATH)
                
                # Restart the web app to apply changes
                az webapp restart --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME)
                
                # Wait for the web app to start up and create necessary directories
                echo "Waiting for the web app to be ready..."
                sleep 60
                
                # Verify that the DAGs folder exists and adjust DAG_PATH if needed
                DAG_PATH="/home/dags/"
                if ! curl -u $(WEBAPP_NAME):$(WEBSITE_PUBLISH_PASSWORD) --head "https://$(WEBAPP_NAME).scm.azurewebsites.net/api/vfs/$DAG_PATH"; then
                  echo "DAGs folder not found, creating..."
                  curl -X PUT -u $(WEBAPP_NAME):$(WEBSITE_PUBLISH_PASSWORD) "https://$(WEBAPP_NAME).scm.azurewebsites.net/api/vfs/$DAG_PATH"
                fi
                
                # Deploy the DAG and requirements.txt
                echo "Deploying DAG and requirements.txt to Azure Web App..."
                az webapp config appsettings set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
                curl -X PUT -u $(WEBAPP_NAME):$(WEBSITE_PUBLISH_PASSWORD) \
                --upload-file ./trigger_azure_function_async.py \
                "https://$(WEBAPP_NAME).scm.azurewebsites.net/api/vfs/$DAG_PATH/trigger_azure_function_async.py"
                
                curl -X PUT -u $(WEBAPP_NAME):$(WEBSITE_PUBLISH_PASSWORD) \
                --upload-file ./requirements.txt \
                "https://$(WEBAPP_NAME).scm.azurewebsites.net/api/vfs/$DAG_PATH/requirements.txt"
                
                echo "Files deployed successfully."
                
            displayName: 'Deploy to Azure Web App using Docker Compose'


