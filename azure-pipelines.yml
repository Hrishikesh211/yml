trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  RESOURCE_GROUP: test-1
  WEBAPP_NAME: testp
  COMPOSE_FILE_PATH: 'docker-compose.yml'
  DAGS_DIR: 'dags'
  ZIP_FILE_NAME: 'dags.zip'

stages:

  - stage: Build
    jobs:
      - job: Build
        steps:
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.SourcesDirectory)/$(DAGS_DIR)'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(ZIP_FILE_NAME)'
              replaceExistingArchive: true
            displayName: 'Zip DAGS Directory'

          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)/$(ZIP_FILE_NAME)'
              artifactName: 'dagsArtifact'
            displayName: 'Publish Zipped DAGS as Pipeline Artifact'

  - stage: UnzipAndDeploy
    dependsOn: Build
    jobs:
      - job: UnzipAndDeploy
        steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: 'dagsArtifact'
              path: '$(Pipeline.Workspace)/dagsArtifact'
            displayName: 'Download Zipped DAGS Artifact'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              appType: 'webAppLinux'
              appName: '$(WEBAPP_NAME)'
              package: '$(Pipeline.Workspace)/dagsArtifact/$(ZIP_FILE_NAME)'
              runtimeStack: 'PYTHON|3.11'
            displayName: 'Deploy Zipped DAGS to Azure Web App'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Unzipping DAGS on Azure Web App..."
                
                if [ ! -d "/home/site/wwwroot" ]; then
                  echo "/home/site/wwwroot directory does not exist. Exiting..."
                  exit 1
                fi
                
                mkdir -p /home/site/wwwroot/dags
                unzip -o $(Pipeline.Workspace)/dagsArtifact/$(ZIP_FILE_NAME) -d /home/site/wwwroot/dags
                rm $(Pipeline.Workspace)/dagsArtifact/$(ZIP_FILE_NAME)
                
                echo "Unzipping completed."
            displayName: 'Unzip DAGS on Azure Web App'

  - stage: Deploy
    dependsOn: UnzipAndDeploy
    jobs:
      - job: Deploy
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Development Subscription (d8501f72-cc6e-4c07-9f8c-b8523c3b63ec)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo "Deploying to Azure Web App using Docker Compose..."
                
                az webapp config appsettings set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --settings WEBSITES_ENABLE_APP_SERVICE_STORAGE=TRUE
                az webapp config container set --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME) --multicontainer-config-type compose --multicontainer-config-file $(COMPOSE_FILE_PATH)
                az webapp restart --resource-group $(RESOURCE_GROUP) --name $(WEBAPP_NAME)
                
                echo "Docker Compose deployment completed."
            displayName: 'Deploy Docker Compose to Azure Web App'
